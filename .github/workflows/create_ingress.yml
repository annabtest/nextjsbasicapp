name: Install NGINX Ingress Controller with Existing Public IP

on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  install-ingress:
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Fetch Public IP Address
      id: get_public_ip
      run: |
        # Fetch the pre-existing static public IP for the Ingress Controller
        PUBLIC_IP=$(az network public-ip show --resource-group ${{ vars.AKS_RES_GROUP }} --name pip_ingress_${{ vars.ENV_TAG }} --query "ipAddress" -o tsv)
        echo "Public IP: $PUBLIC_IP"
        echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Authenticate to AKS
      run: |
        az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Add Helm Repository
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        
    - name: Create Namespace
      run: |
        kubectl create namespace ${{ vars.ENV_TAG }} || echo "Namespace ${{ vars.ENV_TAG }} already exists."

    - name: Delete Existing Ingress-NGINX Release
      run: |
        helm uninstall ingress-nginx --namespace ${{ vars.ENV_TAG }} || echo "No existing release to delete."

    - name: Install NGINX Ingress Controller
      run: |
        helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ${{ vars.ENV_TAG }} --set controller.replicaCount=2 --set controller.service.externalTrafficPolicy=Local --set controller.service.loadBalancerIP=$PUBLIC_IP
